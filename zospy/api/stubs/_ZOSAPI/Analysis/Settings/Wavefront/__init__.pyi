"""This file provides autocompletions for the ZOS-API and was automatically generated.
It should not be edited manually.
"""

from zospy.api.stubs._ZOSAPI.Analysis.Settings import IAS_, IAS_Field, IAS_Wavelength
from zospy.api.stubs._ZOSAPI.Analysis.Settings.Wavefront import (
    DataType,
    FoucaultShowAs,
    KnifeType,
    Types,
)
from zospy.api.stubs._ZOSAPI.Analysis import SampleSizes

from zospy.api.stubs._ZOSAPI_constants.Analysis.Settings.Wavefront import (
    DataType,
    FoucaultShowAs,
    KnifeType,
    Types,
)

__all__ = ("DataType", "FoucaultShowAs", "IAS_Foucault", "KnifeType", "Types")

# DataType is imported as constant

# FoucaultShowAs is imported as constant

class IAS_Foucault(IAS_):
    @property
    def Field(self) -> IAS_Field: ...
    @property
    def Wavelength(self) -> IAS_Wavelength: ...
    @property
    def Type(self) -> Types: ...
    @Type.setter
    def Type(self, value: Types) -> None: ...
    @property
    def Sampling(self) -> SampleSizes: ...
    @Sampling.setter
    def Sampling(self, value: SampleSizes) -> None: ...
    @property
    def ShowAs(self) -> FoucaultShowAs: ...
    @ShowAs.setter
    def ShowAs(self, value: FoucaultShowAs) -> None: ...
    @property
    def Knife(self) -> KnifeType: ...
    @Knife.setter
    def Knife(self, value: KnifeType) -> None: ...
    @property
    def Data(self) -> DataType: ...
    @Data.setter
    def Data(self, value: DataType) -> None: ...
    @property
    def RowColumn(self) -> int: ...
    @RowColumn.setter
    def RowColumn(self, value: int) -> None: ...
    @property
    def UsePolarization(self) -> bool: ...
    @UsePolarization.setter
    def UsePolarization(self, value: bool) -> None: ...
    @property
    def Y_Position(self) -> float: ...
    @Y_Position.setter
    def Y_Position(self, value: float) -> None: ...
    @property
    def Decenter_X(self) -> float: ...
    @Decenter_X.setter
    def Decenter_X(self, value: float) -> None: ...
    @property
    def Decenter_Y(self) -> float: ...
    @Decenter_Y.setter
    def Decenter_Y(self, value: float) -> None: ...
    @property
    def Scale_X(self) -> float: ...
    @Scale_X.setter
    def Scale_X(self, value: float) -> None: ...
    @property
    def Scale_Y(self) -> float: ...
    @Scale_Y.setter
    def Scale_Y(self, value: float) -> None: ...
    @property
    def Source(self) -> str: ...
    @Source.setter
    def Source(self, value: str) -> None: ...
    @property
    def SaveBMP(self) -> str: ...
    @SaveBMP.setter
    def SaveBMP(self, value: str) -> None: ...

# KnifeType is imported as constant

# Types is imported as constant
