"""
This file provides autocompletions for the ZOS-API and was automatically generated.
It should not be edited manually.
"""

from __future__ import annotations

from zospy.api._ZOSAPI.Analysis import (
    BestFitSphereOptions,
    RemoveOptions,
    SampleSizes_Pow2Plus1,
    SampleSizes_Pow2Plus1_X,
    ShowAs,
    SurfaceCurvatureCrossData,
    SurfaceCurvatureData,
    SurfacePhaseData,
    SurfaceSagData,
    SurfaceSlopeCrossData,
    SurfaceSlopeData,
)
from zospy.api._ZOSAPI.Analysis.Settings import IAS_, IAS_Surface

__all__ = (
    "IAS_SurfaceCurvature",
    "IAS_SurfaceCurvatureCross",
    "IAS_SurfacePhase",
    "IAS_SurfacePhaseCross",
    "IAS_SurfaceSag",
    "IAS_SurfaceSagCross",
    "IAS_SurfaceSlope",
    "IAS_SurfaceSlopeCross",
)

class IAS_SurfaceCurvature(IAS_):
    @property
    def BestFitSphereOption(self) -> BestFitSphereOptions: ...
    @property
    def ConsiderOffAxisAperture(self) -> bool: ...
    @property
    def ContourFormat(self) -> str: ...
    @property
    def Data(self) -> SurfaceCurvatureData: ...
    @property
    def RemoveOption(self) -> RemoveOptions: ...
    @property
    def ReverseDirection(self) -> bool: ...
    @property
    def Sampling(self) -> SampleSizes_Pow2Plus1_X: ...
    @property
    def ShowAs(self) -> ShowAs: ...
    @property
    def Surface(self) -> IAS_Surface: ...
    @BestFitSphereOption.setter
    def BestFitSphereOption(self, value: BestFitSphereOptions) -> None: ...
    @ConsiderOffAxisAperture.setter
    def ConsiderOffAxisAperture(self, value: bool) -> None: ...
    @ContourFormat.setter
    def ContourFormat(self, value: str) -> None: ...
    @Data.setter
    def Data(self, value: SurfaceCurvatureData) -> None: ...
    @RemoveOption.setter
    def RemoveOption(self, value: RemoveOptions) -> None: ...
    @ReverseDirection.setter
    def ReverseDirection(self, value: bool) -> None: ...
    @Sampling.setter
    def Sampling(self, value: SampleSizes_Pow2Plus1_X) -> None: ...
    @ShowAs.setter
    def ShowAs(self, value: ShowAs) -> None: ...

class IAS_SurfaceCurvatureCross(IAS_):
    @property
    def Angle(self) -> float: ...
    @property
    def BestFitSphereOption(self) -> BestFitSphereOptions: ...
    @property
    def ConsiderOffAxisAperture(self) -> bool: ...
    @property
    def Data(self) -> SurfaceCurvatureCrossData: ...
    @property
    def RemoveOption(self) -> RemoveOptions: ...
    @property
    def ReverseDirection(self) -> bool: ...
    @property
    def Sampling(self) -> SampleSizes_Pow2Plus1: ...
    @property
    def Surface(self) -> IAS_Surface: ...
    @Angle.setter
    def Angle(self, value: float) -> None: ...
    @BestFitSphereOption.setter
    def BestFitSphereOption(self, value: BestFitSphereOptions) -> None: ...
    @ConsiderOffAxisAperture.setter
    def ConsiderOffAxisAperture(self, value: bool) -> None: ...
    @Data.setter
    def Data(self, value: SurfaceCurvatureCrossData) -> None: ...
    @RemoveOption.setter
    def RemoveOption(self, value: RemoveOptions) -> None: ...
    @ReverseDirection.setter
    def ReverseDirection(self, value: bool) -> None: ...
    @Sampling.setter
    def Sampling(self, value: SampleSizes_Pow2Plus1) -> None: ...

class IAS_SurfacePhase(IAS_):
    @property
    def ContourFormat(self) -> str: ...
    @property
    def Data(self) -> SurfacePhaseData: ...
    @property
    def RemovePiston(self) -> bool: ...
    @property
    def RemovePower(self) -> bool: ...
    @property
    def RemoveTiltX(self) -> bool: ...
    @property
    def RemoveTiltY(self) -> bool: ...
    @property
    def Sampling(self) -> SampleSizes_Pow2Plus1_X: ...
    @property
    def ShowAs(self) -> ShowAs: ...
    @property
    def Surface(self) -> IAS_Surface: ...
    @ContourFormat.setter
    def ContourFormat(self, value: str) -> None: ...
    @Data.setter
    def Data(self, value: SurfacePhaseData) -> None: ...
    @RemovePiston.setter
    def RemovePiston(self, value: bool) -> None: ...
    @RemovePower.setter
    def RemovePower(self, value: bool) -> None: ...
    @RemoveTiltX.setter
    def RemoveTiltX(self, value: bool) -> None: ...
    @RemoveTiltY.setter
    def RemoveTiltY(self, value: bool) -> None: ...
    @Sampling.setter
    def Sampling(self, value: SampleSizes_Pow2Plus1_X) -> None: ...
    @ShowAs.setter
    def ShowAs(self, value: ShowAs) -> None: ...

class IAS_SurfacePhaseCross(IAS_):
    @property
    def Angle(self) -> float: ...
    @property
    def Data(self) -> SurfacePhaseData: ...
    @property
    def RemovePiston(self) -> bool: ...
    @property
    def RemovePower(self) -> bool: ...
    @property
    def RemoveTiltX(self) -> bool: ...
    @property
    def RemoveTiltY(self) -> bool: ...
    @property
    def Sampling(self) -> SampleSizes_Pow2Plus1: ...
    @property
    def Surface(self) -> IAS_Surface: ...
    @Angle.setter
    def Angle(self, value: float) -> None: ...
    @Data.setter
    def Data(self, value: SurfacePhaseData) -> None: ...
    @RemovePiston.setter
    def RemovePiston(self, value: bool) -> None: ...
    @RemovePower.setter
    def RemovePower(self, value: bool) -> None: ...
    @RemoveTiltX.setter
    def RemoveTiltX(self, value: bool) -> None: ...
    @RemoveTiltY.setter
    def RemoveTiltY(self, value: bool) -> None: ...
    @Sampling.setter
    def Sampling(self, value: SampleSizes_Pow2Plus1) -> None: ...

class IAS_SurfaceSag(IAS_):
    @property
    def BestFitSphereOption(self) -> BestFitSphereOptions: ...
    @property
    def ConsiderOffAxisAperture(self) -> bool: ...
    @property
    def ContourFormat(self) -> str: ...
    @property
    def Data(self) -> SurfaceSagData: ...
    @property
    def RemoveOption(self) -> RemoveOptions: ...
    @property
    def ReverseDirection(self) -> bool: ...
    @property
    def Sampling(self) -> SampleSizes_Pow2Plus1_X: ...
    @property
    def ShowAs(self) -> ShowAs: ...
    @property
    def Surface(self) -> IAS_Surface: ...
    @BestFitSphereOption.setter
    def BestFitSphereOption(self, value: BestFitSphereOptions) -> None: ...
    @ConsiderOffAxisAperture.setter
    def ConsiderOffAxisAperture(self, value: bool) -> None: ...
    @ContourFormat.setter
    def ContourFormat(self, value: str) -> None: ...
    @Data.setter
    def Data(self, value: SurfaceSagData) -> None: ...
    @RemoveOption.setter
    def RemoveOption(self, value: RemoveOptions) -> None: ...
    @ReverseDirection.setter
    def ReverseDirection(self, value: bool) -> None: ...
    @Sampling.setter
    def Sampling(self, value: SampleSizes_Pow2Plus1_X) -> None: ...
    @ShowAs.setter
    def ShowAs(self, value: ShowAs) -> None: ...

class IAS_SurfaceSagCross(IAS_):
    @property
    def Angle(self) -> float: ...
    @property
    def BestFitSphereOption(self) -> BestFitSphereOptions: ...
    @property
    def ConsiderOffAxisAperture(self) -> bool: ...
    @property
    def Data(self) -> SurfaceSagData: ...
    @property
    def RemoveOption(self) -> RemoveOptions: ...
    @property
    def ReverseDirection(self) -> bool: ...
    @property
    def Sampling(self) -> SampleSizes_Pow2Plus1: ...
    @property
    def Surface(self) -> IAS_Surface: ...
    @Angle.setter
    def Angle(self, value: float) -> None: ...
    @BestFitSphereOption.setter
    def BestFitSphereOption(self, value: BestFitSphereOptions) -> None: ...
    @ConsiderOffAxisAperture.setter
    def ConsiderOffAxisAperture(self, value: bool) -> None: ...
    @Data.setter
    def Data(self, value: SurfaceSagData) -> None: ...
    @RemoveOption.setter
    def RemoveOption(self, value: RemoveOptions) -> None: ...
    @ReverseDirection.setter
    def ReverseDirection(self, value: bool) -> None: ...
    @Sampling.setter
    def Sampling(self, value: SampleSizes_Pow2Plus1) -> None: ...

class IAS_SurfaceSlope(IAS_):
    @property
    def BestFitSphereOption(self) -> BestFitSphereOptions: ...
    @property
    def ConsiderOffAxisAperture(self) -> bool: ...
    @property
    def ContourFormat(self) -> str: ...
    @property
    def Data(self) -> SurfaceSlopeData: ...
    @property
    def RemoveOption(self) -> RemoveOptions: ...
    @property
    def ReverseDirection(self) -> bool: ...
    @property
    def Sampling(self) -> SampleSizes_Pow2Plus1_X: ...
    @property
    def ShowAs(self) -> ShowAs: ...
    @property
    def Surface(self) -> IAS_Surface: ...
    @BestFitSphereOption.setter
    def BestFitSphereOption(self, value: BestFitSphereOptions) -> None: ...
    @ConsiderOffAxisAperture.setter
    def ConsiderOffAxisAperture(self, value: bool) -> None: ...
    @ContourFormat.setter
    def ContourFormat(self, value: str) -> None: ...
    @Data.setter
    def Data(self, value: SurfaceSlopeData) -> None: ...
    @RemoveOption.setter
    def RemoveOption(self, value: RemoveOptions) -> None: ...
    @ReverseDirection.setter
    def ReverseDirection(self, value: bool) -> None: ...
    @Sampling.setter
    def Sampling(self, value: SampleSizes_Pow2Plus1_X) -> None: ...
    @ShowAs.setter
    def ShowAs(self, value: ShowAs) -> None: ...

class IAS_SurfaceSlopeCross(IAS_):
    @property
    def Angle(self) -> float: ...
    @property
    def BestFitSphereOption(self) -> BestFitSphereOptions: ...
    @property
    def ConsiderOffAxisAperture(self) -> bool: ...
    @property
    def Data(self) -> SurfaceSlopeCrossData: ...
    @property
    def RemoveOption(self) -> RemoveOptions: ...
    @property
    def ReverseDirection(self) -> bool: ...
    @property
    def Sampling(self) -> SampleSizes_Pow2Plus1: ...
    @property
    def Surface(self) -> IAS_Surface: ...
    @Angle.setter
    def Angle(self, value: float) -> None: ...
    @BestFitSphereOption.setter
    def BestFitSphereOption(self, value: BestFitSphereOptions) -> None: ...
    @ConsiderOffAxisAperture.setter
    def ConsiderOffAxisAperture(self, value: bool) -> None: ...
    @Data.setter
    def Data(self, value: SurfaceSlopeCrossData) -> None: ...
    @RemoveOption.setter
    def RemoveOption(self, value: RemoveOptions) -> None: ...
    @ReverseDirection.setter
    def ReverseDirection(self, value: bool) -> None: ...
    @Sampling.setter
    def Sampling(self, value: SampleSizes_Pow2Plus1) -> None: ...
